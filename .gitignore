# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.env.local
.env.development
.env.test
.env.production
.env.staging
.env.lambda
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
.idea/

# AWS Lambda specific
*.zip
lambda-package.zip
deployment-package.zip
function.zip
layer.zip
medical-billing-lambda*.zip
lambda_package/
lambda-deployment/

# AWS SAM
.aws-sam/
samconfig.toml

# AWS CDK
cdk.out/
*.d.ts

# AWS CLI
.aws/
aws-exports.js

# Terraform
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl
terraform.tfvars
terraform.tfvars.json

# Docker
Dockerfile.local
.dockerignore.local
docker-compose.override.yml

# Lambda layers
python/
layer/
layers/

# Deployment artifacts
deployment/
deploy/
package/
packages/

# Local development
.local/
.cache/
tmp/
temp/
.tmp/
.temp/

# Logs
logs/
*.log
*.log.*

# Database files
*.db
*.sqlite
*.sqlite3

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Editor directories and files
.vscode/
!.vscode/extensions.json
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
*.swp
*.swo
*~

# Backup files
*.bak
*.backup
*.old
*.orig
requirementsbak.txt

# Security and secrets
*.pem
*.key
*.crt
*.p12
*.pfx
secrets.json
credentials.json

# Local configuration overrides
config.local.py
config.local.json
local_settings.py

# Testing
.pytest_cache/
.coverage
htmlcov/
.tox/
.nox/
test_*.json
response*.json

# Linting
.flake8
.pylintrc
.bandit

# Type checking
.mypy_cache/
.pytype/

# Profiling
*.prof

# Machine learning models
*.pkl
*.pickle
*.joblib
*.h5
*.hdf5
models/
checkpoints/

# Data files (be careful with these - you might want some)
*.csv
*.xml
*.xlsx
*.xls
data/
datasets/

# Jupyter Notebook checkpoints
.ipynb_checkpoints/

# Virtual environments (additional patterns)
pyvenv.cfg
pip-selfcheck.json

# Package build artifacts
build/
dist/
*.egg-info/

# Local scripts and utilities
scripts/local/
utils/local/
tools/local/

# Lambda deployment scripts
deploy.sh.local
deployment.sh.local

# CloudFormation
*.template
*.yaml.local
*.yml.local

# Serverless Framework
.serverless/
serverless.yml.local

# Chalice
.chalice/deployments/
.chalice/deployed/

# Zappa
zappa_settings.json.local

# Local Lambda test events
events/
test-events/
sample-events/

# Performance and monitoring
*.perf
*.trace

# Temporary Python files
*.pyc
*.pyo
*.pyd

# Local development databases
local.db
dev.db
test.db

# IDE specific files
.vscode/settings.json.local
.idea/workspace.xml
.idea/tasks.xml

# Project specific files to keep tracked
# Uncomment these if you want to track them:
# !requirements.txt
# !Dockerfile
# !deployment.sh
# !lambda_function.py 